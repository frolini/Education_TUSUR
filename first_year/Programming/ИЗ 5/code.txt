/*Дан массив размера N. Найти количество участков, на которых его элементы
убывают.*/

#include <stdio.h>
#include <stdlib.h>

int f(int* arr, int N)
{
	//Сложная проверка....
	int count = 0;
	int flag = 0;
	for (int i = 1; i < N; i++)
	{
		//Если число принадлежит убывающему промежутку, ставим флаг
		if (arr[i - 1] < arr[i])
		{
			flag = 1;
		}
		else
		{
			//Иначе, если флаг поднят(т.е если убывающий промежуток вообще был), считаем этот(закончившийся) промежуток и опускаем флаг, чтобы если дальше пойдёт возрастающий промежутко, мы посчитали каждое число в нём, как закончившийся уменьшающийся промежуток(я говорил, что сложно)
			if (flag == 1)
			{
				count++;
				flag = 0;
			}
		}
	}
	return count;
}

int main()
{
	srand(time(NULL));
	//Создаём массив
	int N = 20;
	int* arr = malloc(sizeof(int) * N);
	for (int i = 0; i < N; i++)
	{
		arr[i] = rand() % 100;
		printf("%d ", arr[i]);
	}
	//Выводим то, что возвращает функция f
	printf("\n\n%d ", f(arr, N));
	getch();
	return 0;
}